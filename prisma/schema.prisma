// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  name String @unique
  password String
  createdAt DateTime @default(now())
  refreshtokens RefreshTokens[]
  orders OrderbookHistory[]
  holdings Holdings[]

}

model RefreshTokens {
  id Int @id @default(autoincrement())
  userName String
  user Users @relation(fields: [userName], references: [name],onDelete: Cascade)
  token String @unique
  userAgent String?
  ipAddress String?
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model OrderbookHistory {
  id Int @id @default(autoincrement())
  userName String
  user Users @relation(fields: [userName] , references: [name] , onDelete: Cascade)
  price Int
  quantity Int
  itemId Int
  item Items @relation(fields: [itemId],references: [id])
}

model Items {
  id Int @id @default(autoincrement()) @unique
  itemName String
  holdings Holdings[]
  orders OrderbookHistory[]
}

model Holdings {
  userName String
  user Users @relation(fields: [userName],references: [name])
  itemId Int
  item Items @relation(fields: [itemId],references: [id])
  quantity Int

  @@id([userName,itemId])
}